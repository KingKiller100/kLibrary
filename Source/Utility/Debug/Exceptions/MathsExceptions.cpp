#include "pch.hpp"
#include "MathsExceptions.hpp"

#include "../../String/kSprintf.hpp"
#include "../../Misc/kNumberSuffix.hpp"

namespace klib::kDebug
{
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Mathematical Exception Base ////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	MathsError::MathsError( std::string_view msg )
		: logic_error( std::string( msg ) )
	{}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// No Real Root Exception ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	template <>
	NoRealRootError::NoRealRootError( float value, const size_t root )
		: MathsError( kString::Sprintf(
			"ERROR: Value \"%.f\" has no %u%s root",
			value,
			root,
			kMisc::GetNumberSuffix<char>( root )
		) )
	{}

	template <>
	NoRealRootError::NoRealRootError( double value, const size_t root )
		: MathsError( kString::Sprintf(
			"ERROR: Value \"%.f\" has no %u%s root",
			value,
			root,
			kMisc::GetNumberSuffix<char>( root )
		) )
	{}

	template <>
	NoRealRootError::NoRealRootError( long double value, const size_t root )
		: MathsError( kString::Sprintf(
			"ERROR: Value \"%.f\" has no %u%s root",
			value,
			root,
			kMisc::GetNumberSuffix<char>( root )
		) )
	{}

	template <>
	NoRealRootError::NoRealRootError( std::make_signed_t<size_t> value, const size_t root )
		: MathsError( kString::Sprintf(
			"ERROR: Value \"%.d\" has no %u%s root",
			value,
			root,
			kMisc::GetNumberSuffix<char>( root )
		) )
	{}

	template <>
	NoRealRootError::NoRealRootError( size_t value, const size_t root )
		: MathsError( kString::Sprintf(
			"ERROR: Value \"%.d\" has no %u%s root",
			value,
			root,
			kMisc::GetNumberSuffix<char>( root )
		) )
	{}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Division By Zero Exception ////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///
	DivByZeroError::DivByZeroError( std::string_view msg )
		: MathsError()
	{}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// No Real Root Exception ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	NoRealRootError::NoRealRootError( std::string_view msg )
		: MathsError( msg )
	{}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Maths Logic Exception //////////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
